# Compiling Time: 1.14 SBU
# Maintainer: bouleetbil <bouleetbil@frogdev.info>
# Contributor: crazy <crazy@frugalware.org>

options+=('asneeded')

USE_DEBUG=${USE_DEBUG:-"n"}
USE_DEVEL=${USE_DEVEL:-"n"}
USE_DETECTDEPENDS=${USE_DETECTDEPENDS:-"n"} # To detected dependecies with makepkg -a

USE_DRI=${USE_DRI:-"y"}
USE_DRI_OLD=${USE_DRI_OLD:-"y"}
USE_EGL=${USE_EGL:-"y"}
USE_GALLIUM=${USE_GALLIUM:-"y"}
USE_GLES1=${USE_GLES1:-"y"}
USE_GLES2=${USE_GLES2:-"y"}
USE_GLX=${USE_GLX:-"y"}
USE_OPENCL=${USE_OPENCL:-"n"}
USE_OSMESA=${USE_OSMESA:-"n"}
USE_VDPAU=${USE_VDPAU:-"y"}
USE_VG=${USE_VG:-"y"}
USE_TEXTURE_FLOAT=${USE_TEXTURE_FLOAT:-"y"}
USE_WAYLAND_EGL=${USE_WAYLAND_EGL:-"y"}
USE_XA=${USE_XA:-"n"}

if Fuse WAYLAND_EGL; then
	USE_EGL=y
fi

if Fuse EGL; then
	USE_VG=y
fi

pkgname=mesa
origname=Mesa
_F_archive_name="MesaLib"
pkgver=9.0.3
pkgrel=2
pkgdesc="Mesa is a 3D graphics library"
url="http://mesa3d.sourceforge.net/"
up2date="lynx --dump 'ftp://ftp.freedesktop.org/pub/mesa/' | grep "pub/mesa/[0-9\.]" | tail -n1 | sed 's|.*/\([0-9\.]\)|\1|'"

# libgl: provided by libgl, fglrx and nvidia packages
depends=()
makedepends=('makedepend')
# should be mesa-*=$pkgver but apps should not depends on mesa anymore first, unless specific to mesa
rodepends=('libgl')
archs=('i686' 'x86_64' 'arm')
groups=('x11' 'xorg-core' 'xorg-libs')

if Fuse DEVEL; then
	unset source sha1sums
	pkgver=9999.g23cd6c4
	pkgrel=0
	_F_scm_type="git"
	_F_scm_url="git://anongit.freedesktop.org/mesa/mesa"
	Finclude scm
else
	source=("ftp://ftp.freedesktop.org/pub/mesa/$pkgver/MesaLib-$pkgver.tar.bz2")
	sha1sums=('c4d88d83d8dbe243e30dc07195888e19ddb1c402')
fi

# Remove libgl-headers-mesa after 1.8
subpkgs=('libgl' 'mesa-libgl-headers')
subdescs=('Mesa DRI OpenGL files.' 'Mesa OpenGL headers files.')
subprovides=('mesa-libgl' 'libgl-headers libgl-headers-mesa')
subreplaces=('' 'libgl-headers-mesa')
subconflicts=('catalyst nvidia' 'libgl-headers-mesa nvidia')
subdepends=('expat libxdamage libxxf86vm' 'dri2proto glproto')
subrodepends=("mesa-libgl-headers>=$pkgver-$pkgrel libglapi libglx mesa-dri-drivers>=$pkgver-$pkgrel" '')
subgroups=('x11' 'x11')
subarchs=("${archs[*]}" "${archs[*]}")
subbackup=('' '')

subpkgs=("${subpkgs[@]}" 'mesa-dri-drivers')
subdescs=("${subdescs[@]}" 'Mesa OpenGL DRI drivers.')
subprovides=("${subprovides[@]}" '')
subreplaces=("${subreplaces[@]}" '')
subconflicts=("${subconflicts[@]}" '')
subdepends=("${subdepends[@]}" "libdrm llvm")
subrodepends=("${subrodepends[@]}" '')
subgroups=("${subgroups[@]}" 'x11')
subarchs=("${subarchs[@]}" "${archs[*]}")
subbackup=("${subbackup[@]}" 'etc/drirc')

subpkgs=("${subpkgs[@]}" 'libgbm')
subdescs=("${subdescs[@]}" 'Mesa gbm library.')
subprovides=("${subprovides[@]}" '')
subreplaces=("${subreplaces[@]}" '')
subconflicts=("${subconflicts[@]}" '')
subdepends=("${subdepends[@]}" 'glibc')
subrodepends=("${subrodepends[@]}" '')
subgroups=("${subgroups[@]}" 'x11')
subarchs=("${subarchs[@]}" "${archs[*]}")
subbackup=("${subbackup[@]}" '')

subpkgs=("${subpkgs[@]}" 'libglapi')
subdescs=("${subdescs[@]}" 'Mesa OpenGL API library.')
subprovides=("${subprovides[@]}" '')
subreplaces=("${subreplaces[@]}" '')
subconflicts=("${subconflicts[@]}" '')
subdepends=("${subdepends[@]}" 'glibc')
subrodepends=("${subrodepends[@]}" '')
subgroups=("${subgroups[@]}" 'x11')
subarchs=("${subarchs[@]}" "${archs[*]}")
subbackup=("${subbackup[@]}" '')

subpkgs=("${subpkgs[@]}" 'libgles')
subdescs=("${subdescs[@]}" 'Mesa OpenGL ES1/ES2 libraries.')
subprovides=("${subprovides[@]}" 'mesa-libgles')
subreplaces=("${subreplaces[@]}" '')
subconflicts=("${subconflicts[@]}" '')
subdepends=("${subdepends[@]}" 'libdrm')
subrodepends=("${subrodepends[@]}" 'libglapi khr-headers')
subgroups=("${subgroups[@]}" 'x11')
subarchs=("${subarchs[@]}" "${archs[*]}")
subbackup=("${subbackup[@]}" '')

subpkgs=("${subpkgs[@]}" 'khr-headers')
subdescs=("${subdescs[@]}" 'Khronos generic header.')
subprovides=("${subprovides[@]}" '')
subreplaces=("${subreplaces[@]}" '')
subconflicts=("${subconflicts[@]}" '')
subdepends=("${subdepends[@]}" '')
subrodepends=("${subrodepends[@]}" '')
subgroups=("${subgroups[@]}" 'x11')
subarchs=("${subarchs[@]}" "${archs[*]}")
subbackup=("${subbackup[@]}" '')

if Fuse EGL; then
	subpkgs=("${subpkgs[@]}" 'libegl')
	subdescs=("${subdescs[@]}" 'Mesa OpenEGL library.')
	subprovides=("${subprovides[@]}" 'mesa-libegl')
	subreplaces=("${subreplaces[@]}" '')
	subconflicts=("${subconflicts[@]}" '')
	subdepends=("${subdepends[@]}" 'dri2proto glproto libdrm')
	if Fuse WAYLAND_EGL; then # Upstream issue
		subrodepends=("${subrodepends[@]}" 'khr-headers libgbm wayland')
	else
		subrodepends=("${subrodepends[@]}" 'khr-headers libgbm')
	fi
	subgroups=("${subgroups[@]}" 'x11')
	subarchs=("${subarchs[@]}" "${archs[*]}")
	subbackup=("${subbackup[@]}" '')
fi

if Fuse VDPAU; then
	subpkgs=("${subpkgs[@]}" 'mesa-vdpau-drivers')
	subdescs=("${subdescs[@]}" 'Mesa VDPAU drivers.')
	subprovides=("${subprovides[@]}" '')
	subreplaces=("${subreplaces[@]}" '')
	subconflicts=("${subconflicts[@]}" '')
	subdepends=("${subdepends[@]}" 'libvdpau')
	subrodepends=("${subrodepends[@]}" '')
	subgroups=("${subgroups[@]}" 'x11')
	subarchs=("${subarchs[@]}" "${archs[*]}")
	subbackup=("${subbackup[@]}" '')
fi

if Fuse VG; then
	subpkgs=("${subpkgs[@]}" 'libvg')
	subdescs=("${subdescs[@]}" 'Mesa OpenVG library.')
	subprovides=("${subprovides[@]}" 'mesa-libvg')
	subreplaces=("${subreplaces[@]}" '')
	subconflicts=("${subconflicts[@]}" '')
	subdepends=("${subdepends[@]}" '')
	subrodepends=("${subrodepends[@]}" 'libgl khr-headers')
	subgroups=("${subgroups[@]}" 'x11')
	subarchs=("${subarchs[@]}" "${archs[*]}")
	subbackup=("${subbackup[@]}" '')
fi

if Fuse WAYLAND_EGL; then
	subpkgs=("${subpkgs[@]}" 'libwayland-egl')
	subdescs=("${subdescs[@]}" 'Mesa Wayland EGL library.')
	subprovides=("${subprovides[@]}" 'mesa-libwayland-egl')
	subreplaces=("${subreplaces[@]}" '')
	subconflicts=("${subconflicts[@]}" '')
	subdepends=("${subdepends[@]}" 'wayland')
	subrodepends=("${subrodepends[@]}" 'libegl')
	subgroups=("${subgroups[@]}" 'x11')
	subarchs=("${subarchs[@]}" "${archs[*]}")
	subbackup=("${subbackup[@]}" '')
fi

if Fuse DETECTDEPENDS; then
	makedepends=("${makedepends[@]}" "$pkgname=$pkgver" "${subpkgs[@]}")
fi

build() {
#	unset MAKEFLAGS

	if Fuse DEVEL; then
		Funpack_scm
	fi

	Fcd $origname-$pkgver
	Fpatchall
	./autogen.sh

	if Fuse DEBUG; then
		Fconfopts+=" --enable-debug"
	else
		Fconfopts+=" --disable-debug"
	fi

	if Fuse DRI; then
		Fconfopts+=" --enable-dri"
		Fconfopts+=" --with-dri-driverdir=/usr/lib/dri"
	else
		Fconfopts+=" --disable-dri"
	fi

	if Fuse GLES1; then
		Fconfopts+=" --enable-gles1"
	else
		Fconfopts+=" --disable-gles1"
	fi

	if Fuse GLES2; then
		Fconfopts+=" --enable-gles2"
	else
		Fconfopts+=" --disable-gles2"
	fi

	if Fuse GLX; then
		Fconfopts+=" --enable-glx --enable-glx-tls"
	else
		Fconfopts+=" --disable-glx"
	fi

	if Fuse OPENCL; then
		Fconfopts+=" --enable-opencl"
	else
		Fconfopts+=" --disable-opencl"
	fi

	if Fuse OSMESA; then
		Fconfopts+=" --enable-osmesa"
	else
		Fconfopts+=" --disable-osmesa"
	fi

	if Fuse TEXTURE_FLOAT; then
		Fconfopts+=" --enable-texture-float"
	else
		Fconfopts+=" --disable-texture-float"
	fi

	if Fuse VDPAU; then
		Fconfopts+=" --enable-vdpau"
	else
		Fconfopts+=" --disable-vdpau"
	fi

	if Fuse VG; then
		Fconfopts+=" --enable-openvg"
	else
		Fconfopts+=" --disable-openvg"
	fi

	if Fuse XA; then
		Fconfopts+=" --enable-xa"
	else
		Fconfopts+=" --disable-xa"
	fi

	if Fuse DRI_OLD; then
		# Disable intel on ARM until a better solution is found.
		if [ "$CARCH" == arm ]; then
			Fconfopts+=" --with-dri-drivers=nouveau,r200,radeon,swrast"
		else
			Fconfopts+=" --with-dri-drivers=yes"
		fi
	else
		Fconfopts+=" --with-dri-drivers=no"
	fi

	if Fuse EGL; then
		EGL_PLATFORMS="drm,x11"
		if Fuse WAYLAND_EGL; then
			EGL_PLATFORMS+=",wayland"
		fi
		Fconfopts+=" --with-egl-platforms=$EGL_PLATFORMS"
		Fconfopts+=" --enable-egl"
	else
		Fconfopts+=" --disable-egl"
	fi

	if Fuse GALLIUM; then
		if [ "$CARCH" != arm ]; then
			GALLIUM_DRIVERS+=",i915"
		fi
		GALLIUM_DRIVERS+=",nouveau"
		GALLIUM_DRIVERS+=",r300,r600"
		GALLIUM_DRIVERS+=",svga"
		GALLIUM_DRIVERS+=",swrast"
		Fconfopts+=" --with-gallium-drivers=$GALLIUM_DRIVERS"
		Fconfopts+=" --enable-gallium-g3dvl"
		Fconfopts+=" --enable-gallium-gbm"
		Fconfopts+=" --enable-gallium-llvm"
		if Fuse EGL; then
			Fconfopts+=" --enable-gallium-egl"
		fi
	else
		Fconfopts+=" --disable-gallium"
	fi

	Fconf	\
		--enable-gbm \
		--enable-shared-glapi

	make || Fdie

	Fmkdir /usr

	make DESTDIR=$Fdestdir INSTALL_DIR=$Fdestdir/usr install || Fdie
	# required by xf86-video-nsc, for example
	Fmkdir /usr/include/xorg
	Ffilerel src/mesa/x86/assyntax.h /usr/include/xorg

	Fmkdir /usr/share/doc/$pkgname-$pkgver
	cp -r docs/{README.*,*.html,COPYING} \
		$Fdestdir/usr/share/doc/$pkgname-$pkgver/ || Fdie

	# Remove to avoid a conflict with Glew
	Frm /usr/include/GL/wglew.h
	Frm /usr/include/GL/glxew.h
	Frm /usr/include/GL/glew.h

	Fsplit libglapi usr/lib/libglapi.*

	Fsplit libgbm usr/include/gbm.h
	Fsplit libgbm usr/lib/gbm/
	Fsplit libgbm usr/lib/libgbm.*
	Fsplit libgbm usr/lib/pkgconfig/gbm.pc

	Fsplit libgl usr/lib/libGL.*
	Fsplit libgl usr/lib/pkgconfig/gl.pc

	Fsplit mesa-libgl-headers usr/include/GL/{gl.h,glext.h,glx.h,glxext.h}
	Fsplit mesa-libgl-headers usr/include/GL/internal

	Fsplit mesa-dri-drivers etc/drirc
	Fsplit mesa-dri-drivers usr/lib/dri/
	Fsplit mesa-dri-drivers usr/lib/libdricore*
	Fsplit mesa-dri-drivers usr/lib/pkgconfig/dri.pc

	Fsplit khr-headers usr/include/KHR/

#	Fsplit xf86-video-gles usr/include/xorg/
#	Fsplit xf86-video-gles usr/lib/xorg/modules/drivers/

	if Fuse EGL; then
		Fsplit libegl usr/include/EGL/
		Fsplit libegl usr/lib/libEGL.*
		Fsplit libegl usr/lib/egl/
		Fsplit libegl usr/lib/pkgconfig/egl.pc
	fi

	if Fuse GLES1 || Fuse GLES2; then
		Fsplit libgles usr/include/GLES*/
		Fsplit libgles usr/lib/libGLES*
		Fsplit libgles usr/lib/pkgconfig/gles*.pc
	fi

	if Fuse OPENCL; then
		Fsplit libcl usr/include/CL*/
		Fsplit libcl usr/lib/libCL*
		Fsplit libcl usr/lib/pkgconfig/cl.pc
	fi

	if Fuse OSMESA; then
		Fsplit libosmesa usr/include/GL/osmesa.h
		Fsplit libosmesa usr/lib/libOSMesa.*
		Fsplit libosmesa usr/lib/pkgconfig/osmesa.pc
	else
		Frm usr/include/GL/osmesa.h
	fi

	if Fuse VDPAU; then
		Fsplit mesa-vdpau-drivers usr/lib/vdpau/
	fi

	if Fuse VG; then
		Fsplit libvg usr/include/VG/
		Fsplit libvg usr/lib/libOpenVG.*
		Fsplit libvg usr/lib/pkgconfig/vg.pc
	fi

	if Fuse WAYLAND_EGL; then
		Fsplit libwayland-egl usr/lib/libwayland-egl.*
		Fsplit libwayland-egl usr/lib/pkgconfig/wayland-egl.pc
	fi

	Frm var
}

# optimization OK
