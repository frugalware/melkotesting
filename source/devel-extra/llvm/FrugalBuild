# Compiling Time: 0.18 SBU
# Maintainer: James Buren <ryuo@frugalware.org>

pkgname=llvm
pkgver=2.9
pkgrel=4
url="http://www.llvm.org"
pkgdesc="Low Level Virtual Machine ( Compiler , Tools and Libs )"
depends=('libstdc++')
makedepends=('groff' 'libffi' 'python' 'ocaml')
groups=('devel-extra')
archs=('i686' 'x86_64' 'arm')
up2date="Flasttar $url/releases/download.html"
source=(http://llvm.org/releases/$pkgver/$pkgname-$pkgver.tgz \
        http://llvm.org/releases/$pkgver/clang-$pkgver.tgz \
        clang-plugin-loader-registry.patch \
        cindexer-clang-path.patch \
        clang-toolchains-gcc-versions.patch \
        clang-pure64.patch \
        enable-lto.patch)
sha1sums=('500f587f840199ac53c4fc7572839d08fa9d9123' \
          '5fd3b5cec050ec12858c1602b23cf096282ad4a4' \
          'f616f6147bb6bd752b9f3f3e93a569cc70442107' \
          '8d091c17cb43e6afbaa5c5381a29764676b3017f' \
          'c55bfa2448b605e9eb300b07950860eb2f9cc8a1' \
          'f2ed97c095d8ffd04f8e2dd623ab38eb6db0d020' \
          'c59f4bb865f9f513096fff12cefa4583fa5d9e59')

subpkgs=("${subpkgs[@]}" "clang")
subdescs=("${subdescs[@]}" "C language family frontend for LLVM")
subdepends=("${subdepends[@]}" "")
subrodepends=("${subrodepends[@]}" "$pkgname=$pkgver")
subgroups=("${subgroups[@]}" 'devel-extra')
subarchs=("${subarchs[@]}" 'i686 x86_64')

subpkgs=("${subpkgs[@]}" "$pkgname-ocaml")
subdescs=("${subdescs[@]}" "OCaml bindings for LLVM")
subdepends=("${subdepends[@]}" "ocaml")
subrodepends=("${subrodepends[@]}" "$pkgname=$pkgver")
subgroups=("${subgroups[@]}" 'devel-extra')
subarchs=("${subarchs[@]}" 'i686 x86_64')

build() {
  Fcd
  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  rm -rf tools/clang || Fdie
  cp -r "$Fsrcdir/clang-$pkgver" tools/clang || Fdie

  # Fix symbolic links from OCaml bindings to LLVM libraries
  sed -i 's:\$(PROJ_libdir):/usr/lib/llvm:' bindings/ocaml/Makefile.ocaml || Fdie

  # Fix installation directories, ./configure doesn't seem to set them right
  sed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
         -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib/llvm:' \
         -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in || Fdie

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
  sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules || Fdie

  # Get the correct list of symbols to export
  # See http://lists.cs.uiuc.edu/pipermail/cfe-dev/2010-April/008559.html
  Fpatch clang-plugin-loader-registry.patch

  # Fix clang path in CIndexer.cpp (https://bugs.archlinux.org/task/22799)
  cd tools/clang || Fdie
  Fpatch cindexer-clang-path.patch

  # Add GCC 4.6.1 to GccVersions (FS#23631)
  Fpatch clang-toolchains-gcc-versions.patch

  if [[ $CARCH == x86_64 ]]; then
    # Adjust lib paths
    Fpatch clang-pure64.patch
  fi

  # Make -flto work
  # Use gold instead of default linker, and always use the plugin
  Fpatch enable-lto.patch

  # Apply strip option to configure
  _optimized_switch="enable"
  [[ $(check_option strip) == n ]] && _optimized_switch="disable"

  # Include location of libffi headers in CPPFLAGS
  export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libffi)"

  _cxx_headers="/usr/include/c++/clang-$pkgver"

  cd ../.. || Fdie
  Fconf \
    --prefix=/usr \
    --libdir=/usr/lib/llvm \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    #--with-binutils-include=/usr/include \
    --with-cxx-include-root=$_cxx_headers \
    --with-cxx-include-arch=$CHOST \
    --$_optimized_switch-optimized

  make REQUIRES_RTTI=1 || Fdie

  # We move the clang directory out of the tree so it won't get installed and
  # then we bring it back in for the clang package
  mv tools/clang "$Fsrcdir"
  # -j1 is due to race conditions during the installation of the OCaml bindings
  make -j1 DESTDIR="$Fdestdir" install || Fdie
  mv "$Fsrcdir/clang" tools || Fdie

  # Remove duplicate files installed by the OCaml bindings
  rm "$Fdestdir"/usr/{lib/llvm/libllvm*,share/doc/llvm/ocamldoc.tar.gz} || Fdie

  # Fix permissions of static libs
  chmod -x "$Fdestdir"/usr/lib/llvm/*.a || Fdie

  # Fix libdir in llvm-config (http://bugs.archlinux.org/task/14487)
  sed -i 's:\(ABS_RUN_DIR/lib\):\1/llvm:' "$Fdestdir/usr/bin/llvm-config" || Fdie

  # Get rid of example Hello transformation
  rm "$Fdestdir"/usr/lib/llvm/*LLVMHello.* || Fdie

  # Symlink the gold plugin where clang expects it
  ln -s llvm/LLVMgold.so "$Fdestdir/usr/lib/LLVMgold.so" || Fdie

  # Add ld.so.conf.d entry
  install -d "$Fdestdir/etc/ld.so.conf.d" || Fdie
  echo /usr/lib/llvm >"$Fdestdir/etc/ld.so.conf.d/llvm.conf" || Fdie

  Fcd

  # Remove execute bit from static libraries
  chmod -x "$Fdestdir"/usr/lib/ocaml/libllvm*.a || Fdie

  # Fix installation path for clang docs
  sed -i 's:$(PROJ_prefix)/share/doc/llvm:$(PROJ_prefix)/share/doc/clang:' \
    "$Fsrcdir/llvm-$pkgver/Makefile.config" || Fdie

  cd "$Fsrcdir/llvm-$pkgver/tools/clang" || Fdie
  make DESTDIR="$Fdestdir" install || Fdie

  # Fix permissions of static libs
  chmod -x "$Fdestdir"/usr/lib/llvm/*.a || Fdie

  # Revert the path change in case we want to do a repackage later
  sed -i 's:$(PROJ_prefix)/share/doc/clang:$(PROJ_prefix)/share/doc/llvm:' \
    "$Fsrcdir/llvm-$pkgver/Makefile.config" || Fdie

  Fsplit clang /usr/bin/clang*
  Fsplit clang /usr/include/clang*

  Fsplit clang /usr/lib/clang/
  Fsplit clang /usr/lib/llvm/libclang*
  Fsplit clang /usr/share/doc/clang
  Fsplit clang /usr/share/man/man1/clang*

  Fsplit $pkgname-ocaml usr/lib/ocaml/
  Fsplit $pkgname-ocaml usr/share/doc/llvm/ocamldoc/
}

# optimization OK
