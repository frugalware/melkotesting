diff -ur a/util/grub.d/10_linux.in b/util/grub.d/10_linux.in
--- a/util/grub.d/10_linux.in	2012-09-01 00:23:00.204391021 -0500
+++ b/util/grub.d/10_linux.in	2012-09-01 06:06:26.105189237 -0500
@@ -31,7 +31,7 @@
 if [ "x${GRUB_DISTRIBUTOR}" = "x" ] ; then
   OS=GNU/Linux
 else
-  OS="${GRUB_DISTRIBUTOR} GNU/Linux"
+  OS="${GRUB_DISTRIBUTOR}"
   CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1) ${CLASS}"
 fi
 
@@ -73,6 +73,26 @@
 
 title_correction_code=
 
+_resume=""
+
+while read line; do
+	_device=$(echo $line | cut -f 1 -d ' ')
+	_type=$(echo $line | cut -f 2 -d ' ')
+	[ "$_type" != "partition" ] && continue
+	_uuid=$(blkid | grep -m 1 "^$_device:" | sed -rn 's|.*UUID="([^"]+)".*|\1|p')
+	_resume="resume=UUID=$_uuid"
+	break
+done << EOF
+$(tail -n +2 /proc/swaps)
+EOF
+
+_modeset=""
+
+for i in `find /lib/modules -regex '^.*/\(nvidia\|fglrx\)\.ko.*$'`; do
+  _modeset="nomodeset"
+  break
+done
+
 linux_entry ()
 {
   os="$1"
@@ -85,6 +105,8 @@
   fi
   if [ x$type != xsimple ] ; then
       case $type in
+	  console)
+	      title="$(gettext_printf "%s, with Linux %s (console mode)" "${os}" "${version}")" ;;
 	  recovery)
 	      title="$(gettext_printf "%s, with Linux %s (recovery mode)" "${os}" "${version}")" ;;
 	  *)
@@ -135,7 +157,7 @@
   message="$(gettext_printf "Loading Linux %s ..." ${version})"
   sed "s/^/$submenu_indentation/" << EOF
 	echo	'$message'
-	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
+	linux	${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args} ${_resume} ${_modeset}
 EOF
   if test -n "${initrd}" ; then
     # TRANSLATORS: ramdisk isn't identifier. Should be translated.
@@ -156,7 +178,7 @@
 	list=`for i in /boot/vmlinuz-* /vmlinuz-* /boot/kernel-* ; do
                   if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
               done` ;;
-    *) 
+    *)
 	list=`for i in /boot/vmlinuz-* /boot/vmlinux-* /vmlinuz-* /vmlinux-* /boot/kernel-* ; do
                   if grub_file_is_not_garbage "$i" ; then echo -n "$i " ; fi
 	     done` ;;
@@ -239,11 +261,12 @@
     echo "submenu '$(gettext_printf "Advanced options for %s" "${OS}" | grub_quote)' \$menuentry_id_option 'gnulinux-advanced-$boot_device_id' {"
   fi
 
-  linux_entry "${OS}" "${version}" advanced \
-              "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}"
+  linux_entry "${OS}" "${version}" console \
+              "${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT} systemd.unit=multi-user.target"
+
   if [ "x${GRUB_DISABLE_RECOVERY}" != "xtrue" ]; then
     linux_entry "${OS}" "${version}" recovery \
-                "single ${GRUB_CMDLINE_LINUX}"
+                "${GRUB_CMDLINE_LINUX} systemd.unit=rescue.target"
   fi
 
   list=`echo $list | tr ' ' '\n' | grep -vx $linux | tr '\n' ' '`
