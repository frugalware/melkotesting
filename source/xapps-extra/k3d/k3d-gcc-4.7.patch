diff -Naur k3d-source-0.8.0.2/k3dsdk/data.h k3d-source-0.8.0.2new/k3dsdk/data.h
--- k3d-source-0.8.0.2/k3dsdk/data.h	2010-07-03 04:28:57.000000000 +0200
+++ k3d-source-0.8.0.2new/k3dsdk/data.h	2012-05-03 22:44:22.894766966 +0200
@@ -580,7 +580,7 @@
 
 		try
 		{
-			set_value(boost::lexical_cast<value_t>(*new_value), Hint);
+			this->set_value(boost::lexical_cast<value_t>(*new_value), Hint);
 			return true;
 		}
 		catch(...)
@@ -865,7 +865,7 @@
 
 		try
 		{
-			set_value(boost::lexical_cast<value_t>(*new_value), Hint);
+			this->set_value(boost::lexical_cast<value_t>(*new_value), Hint);
 			return true;
 		}
 		catch(...)
@@ -1011,7 +1011,7 @@
 
 		try
 		{
-			set_value(boost::lexical_cast<value_t>(*new_value), Hint);
+			this->set_value(boost::lexical_cast<value_t>(*new_value), Hint);
 			return true;
 		}
 		catch(...)
@@ -1146,7 +1146,7 @@
 		if(!new_value)
 			return false;
 
-		set_value(*new_value, Hint);
+		this->set_value(*new_value, Hint);
 		return true;
 	}
 
@@ -1671,7 +1671,7 @@
 	/// This little bit of magic makes it possible for base classes (such as node_storage) to update their own values while observing the correct undo policy
 	void internal_set_value(const value_t& Value, ihint* const Hint)
 	{
-		set_value(Value, Hint);
+		this->set_value(Value, Hint);
 	}
 };
 
diff -Naur k3d-source-0.8.0.2/modules/animation/interpolator.h k3d-source-0.8.0.2new/modules/animation/interpolator.h
--- k3d-source-0.8.0.2/modules/animation/interpolator.h	2010-07-03 04:28:58.000000000 +0200
+++ k3d-source-0.8.0.2new/modules/animation/interpolator.h	2012-05-01 13:38:21.353060659 +0200
@@ -92,7 +92,7 @@
 	{
 		time_t t_lower, t_upper;
 		value_t v_lower, v_upper;
-		get_surrounding_keys(Time, Keyframes, t_lower, t_upper, v_lower, v_upper); 
+		this->get_surrounding_keys(Time, Keyframes, t_lower, t_upper, v_lower, v_upper);
 		return lerp(t_lower, t_upper, v_lower, v_upper, Time);
 	}
 protected:
@@ -116,7 +116,7 @@
 	{
 		time_t t_lower, t_upper;
 		value_t v_lower, v_upper;
-		get_surrounding_keys(Time, Keyframes, t_lower, t_upper, v_lower, v_upper); 
+		this->get_surrounding_keys(Time, Keyframes, t_lower, t_upper, v_lower, v_upper);
 		return lerp(t_lower, t_upper, v_lower, v_upper, Time);
 	} 
 protected:
