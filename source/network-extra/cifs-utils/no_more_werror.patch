From 8c6268cbbd4202631e5c4b30297adc0088a1d568 Mon Sep 17 00:00:00 2001
From: Jeff Layton <jlayton@samba.org>
Date: Thu, 19 Apr 2012 07:29:46 -0400
Subject: [PATCH 1/1] mount.cifs: fix up some -D_FORTIFY_SOURCE=2 warnings

...and add -D_FORTIFY_SOURCE=2 to the default $CFLAGS.

Acked-by: Acked-by: Suresh Jayaraman <sjayaraman@suse.com>
Signed-off-by: Jeff Layton <jlayton@samba.org>
---
 Makefile.am  |    2 +-
 mount.cifs.c |   14 ++++++++------
 mtab.c       |    4 +++-
 3 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index d95142a..05729ca 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,4 +1,4 @@
-AM_CFLAGS = -Wall -Wextra -Werror
+AM_CFLAGS = -Wall -Wextra -Werror -D_FORTIFY_SOURCE=2
 ACLOCAL_AMFLAGS = -I aclocal
 
 root_sbindir = $(ROOTSBINDIR)
diff --git a/mount.cifs.c b/mount.cifs.c
index f0b073e..2c481d8 100644
--- a/mount.cifs.c
+++ b/mount.cifs.c
@@ -927,11 +927,11 @@ parse_options(const char *data, struct parsed_mount_info *parsed_info)
 					return EX_USAGE;
 				}
 			} else {
-				/* domain/username%password */
-				const int max = MAX_DOMAIN_SIZE +
-						MAX_USERNAME_SIZE +
-						MOUNT_PASSWD_SIZE + 2;
-				if (strnlen(value, max + 1) >= max + 1) {
+				/* domain/username%password  + NULL term. */
+				const size_t max = MAX_DOMAIN_SIZE +
+						   MAX_USERNAME_SIZE +
+						   MOUNT_PASSWD_SIZE + 2 + 1;
+				if (strnlen(value, max) >= max) {
 					fprintf(stderr, "username too long\n");
 					return EX_USAGE;
 				}
@@ -1603,8 +1603,10 @@ add_mtab(char *devname, char *mountpoint, unsigned long flags, const char *fstyp
 	mountent.mnt_passno = 0;
 	rc = addmntent(pmntfile, &mountent);
 	if (rc) {
+		int ignore __attribute__((unused));
+
 		fprintf(stderr, "unable to add mount entry to mtab\n");
-		ftruncate(fd, statbuf.st_size);
+		ignore = ftruncate(fd, statbuf.st_size);
 		rc = EX_FILEIO;
 	}
 	tmprc = my_endmntent(pmntfile, statbuf.st_size);
diff --git a/mtab.c b/mtab.c
index de545b7..3d42ac0 100644
--- a/mtab.c
+++ b/mtab.c
@@ -271,8 +271,10 @@ my_endmntent(FILE *stream, off_t size)
 
 	/* truncate file back to "size" -- best effort here */
 	if (rc) {
+		int ignore __attribute__((unused));
+
 		rc = errno;
-		ftruncate(fd, size);
+		ignore = ftruncate(fd, size);
 	}
 
 	endmntent(stream);
-- 
1.7.0.4

